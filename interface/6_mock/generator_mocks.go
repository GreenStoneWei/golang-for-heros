// Code generated by MockGen. DO NOT EDIT.
// Source: interface/6_mock/times.go

// Package mock_times is a generated GoMock package.
package times

import (
	reflect "reflect"

	number "github.com/GreenStoneWei/golang-for-heros/interface/6_mock/number"
	gomock "github.com/golang/mock/gomock"
)

// Mockgenerator is a mock of generator interface.
type Mockgenerator struct {
	ctrl     *gomock.Controller
	recorder *MockgeneratorMockRecorder
}

// MockgeneratorMockRecorder is the mock recorder for Mockgenerator.
type MockgeneratorMockRecorder struct {
	mock *Mockgenerator
}

// NewMockgenerator creates a new mock instance.
func NewMockgenerator(ctrl *gomock.Controller) *Mockgenerator {
	mock := &Mockgenerator{ctrl: ctrl}
	mock.recorder = &MockgeneratorMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *Mockgenerator) EXPECT() *MockgeneratorMockRecorder {
	return m.recorder
}

// RandomNumber mocks base method.
func (m *Mockgenerator) RandomNumber(nt number.NumberType) int {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "RandomNumber", nt)
	ret0, _ := ret[0].(int)
	return ret0
}

// RandomNumber indicates an expected call of RandomNumber.
func (mr *MockgeneratorMockRecorder) RandomNumber(nt interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "RandomNumber", reflect.TypeOf((*Mockgenerator)(nil).RandomNumber), nt)
}